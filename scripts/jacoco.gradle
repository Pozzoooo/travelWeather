apply plugin: 'jacoco'

jacoco {
	toolVersion = "0.8.7.202102210642"
	reportsDir = file("$buildDir/reports")
}

android {
	testOptions {
		unitTests.all {
			jacoco {
				includeNoLocationClasses = true
			}
		}
	}
}

//Jacoco won't run in JDK 9+
//tasks.withType(Test) {
//	jacoco.includeNoLocationClasses = true
//	jacoco.excludes = ['jdk.internal.*']
//}

task jacocoTestReport(type: JacocoReport, dependsOn: "testDebugUnitTest") {
	group = "Reporting"
	description = "Generate Jacoco coverage reports for Debug build"

	reports {
		xml.enabled = true
		html.enabled = true
	}

	// what to exclude from coverage report
	// UI, "noise", generated classes, platform classes, etc.
	def excludes = [
			'**/R.class',
			'**/App*.class',
			'**/R$*.class',
			'**/*$ViewInjector*.*',
			'**/BuildConfig.*',
			'**/Manifest*.*',
			'**/*Test*.*',
			'android/**/*.*',
			'**/*Fragment*',
			'**/*Activity*',
			'**/*Adapter*',
			'**/Dagger*',
			'**/Shadow*',
			'**/*_MembersInjector*',
			'**/*Animation.class',
			'**/*Bug*',
			'**/*Module*.*',
			'**/databinding/**',
			'**/*Tutorial*',
			'**/*LiveData*',
			'**/PermissionChecker.class',
			'**/*Factory.class'
	]
	// generated classes
	getClassDirectories().setFrom(fileTree(
			dir: "$buildDir/intermediates/classes/debug",
			excludes: excludes
	) + fileTree(
			dir: "$buildDir/tmp/kotlin-classes/debug",
			excludes: excludes
	))

	// sources
	getSourceDirectories().setFrom(files([
			android.sourceSets.main.java.srcDirs,
			"src/main/kotlin"
	]))
	getExecutionData().setFrom(files("$buildDir/jacoco/testDebugUnitTest.exec"))
}
